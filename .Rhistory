setwd("~/Desktop/treasury-yield/")
library(shiny)
library(rvest)
library(plotly)
library(dplyr)
source("yield_scraper.R")
source("yield_plot.R")
yield_data <- yield_scraper()
yield_data
yield_scraper <- function(){
# # URL to US Treasury website
# url <- "https://www.treasury.gov/resource-center/data-chart-center/interest-rates/Pages/TextView.aspx?data=yieldAll"
#
# # get table header
# maturities <- url %>%
#   read_html() %>%
#   html_nodes('th') %>%
#   html_text()
#
# # scraping yield data
# yield_data <- url %>%
#   read_html() %>%
#   html_nodes('.text_view_data') %>%
#   html_text()
#
# # reparing NAs
# yield_data[grepl("N/A", yield_data)] <- NA
#
# # making data.frame of yields
# yield_data <- yield_data %>%
#   matrix(ncol = length(maturities), byrow = TRUE) %>%
#   data.frame(stringsAsFactors = FALSE)
# names(yield_data) <- maturities
# yield_data <- yield_data %>%
#   mutate_at(vars(-Date), ~as.numeric(.)) %>%
#   mutate(Date = as.Date(Date, format = "%m/%d/%y"))
yield <- read.csv("yield_data.csv")
max_yr <- lubridate::year(max(yield$Date))
years <- (max_yr + 1):lubridate::year(Sys.time())
for (year in years) {
link <- url(paste0("https://home.treasury.gov/resource-center/data-chart-center/interest-rates/daily-treasury-rates.csv/",
year,
"/all?type=daily_treasury_yield_curve&field_tdr_date_value=",
year,
"&page&_format=csv"))
yield_new <- read.csv(link) %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
arrange(Date)
all_cols <- union(names(yield), names(yield_new))
all_cols <- c("Date",
all_cols[grepl("Mo",all_cols)][order(as.numeric(gsub(" Mo", "", all_cols[grepl("Mo",all_cols)])))],
all_cols[grepl("Yr",all_cols)][order(as.numeric(gsub(" Yr", "", all_cols[grepl("Yr",all_cols)])))])
for (col in setdiff(all_cols, names(yield))) yield[[col]] <- NA
for (col in setdiff(all_cols, names(yield_new))) yield_new[[col]] <- NA
yield <- rbind(yield[all_cols],yield_new[all_cols])
}
return(yield)
}
yield <- read.csv("yield_data.csv")
max_yr <- lubridate::year(max(yield$Date))
years <- (max_yr + 1):lubridate::year(Sys.time())
years
year
year=2025
link <- url(paste0("https://home.treasury.gov/resource-center/data-chart-center/interest-rates/daily-treasury-rates.csv/",
year,
"/all?type=daily_treasury_yield_curve&field_tdr_date_value=",
year,
"&page&_format=csv"))
yield_new <- read.csv(link) %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
arrange(Date)
yield_new
all_cols <- union(names(yield), names(yield_new))
all_cols <- c("Date",
all_cols[grepl("Mo",all_cols)][order(as.numeric(gsub(" Mo", "", all_cols[grepl("Mo",all_cols)])))],
all_cols[grepl("Yr",all_cols)][order(as.numeric(gsub(" Yr", "", all_cols[grepl("Yr",all_cols)])))])
all_cols
yield_new
all_cols <- union(names(yield), names(yield_new))
all_cols
yield
yield <- read.csv("yield_data.csv")
yield
yield <- read.csv("~/Desktop/treasury-yield/yield_data.csv")
yield
yield <- read.csv("~/Desktop/treasury-yield/yield_data.csv")
yield
yield <- read.csv("yield_data.csv") %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
arrange(Date)
max_yr <- lubridate::year(max(yield$Date))
years <- (max_yr + 1):lubridate::year(Sys.time())
for (year in years) {
link <- url(paste0("https://home.treasury.gov/resource-center/data-chart-center/interest-rates/daily-treasury-rates.csv/",
year,
"/all?type=daily_treasury_yield_curve&field_tdr_date_value=",
year,
"&page&_format=csv"))
yield_new <- read.csv(link) %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
arrange(Date)
all_cols <- union(names(yield), names(yield_new))
all_cols <- c("Date",
all_cols[grepl("Mo",all_cols)][order(as.numeric(gsub(" Mo", "", all_cols[grepl("Mo",all_cols)])))],
all_cols[grepl("Yr",all_cols)][order(as.numeric(gsub(" Yr", "", all_cols[grepl("Yr",all_cols)])))])
for (col in setdiff(all_cols, names(yield))) yield[[col]] <- NA
for (col in setdiff(all_cols, names(yield_new))) yield_new[[col]] <- NA
yield <- rbind(yield[all_cols],yield_new[all_cols])
}
yield
yield_data <- yield_scraper()
yield_data
yield
yield <- read.csv("yield_data.csv") %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
arrange(Date)
yield
read.csv("yield_data.csv") %>%
rename_all(~gsub("X", "", .))
yield <- read.csv("yield_data.csv") %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
arrange(Date)
max_yr <- lubridate::year(max(yield$Date))
years <- (max_yr + 1):lubridate::year(Sys.time())
for (year in years) {
link <- url(paste0("https://home.treasury.gov/resource-center/data-chart-center/interest-rates/daily-treasury-rates.csv/",
year,
"/all?type=daily_treasury_yield_curve&field_tdr_date_value=",
year,
"&page&_format=csv"))
yield_new <- read.csv(link) %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
arrange(Date)
all_cols <- union(names(yield), names(yield_new))
all_cols <- c("Date",
all_cols[grepl("Mo",all_cols)][order(as.numeric(gsub(" Mo", "", all_cols[grepl("Mo",all_cols)])))],
all_cols[grepl("Yr",all_cols)][order(as.numeric(gsub(" Yr", "", all_cols[grepl("Yr",all_cols)])))])
for (col in setdiff(all_cols, names(yield))) yield[[col]] <- NA
for (col in setdiff(all_cols, names(yield_new))) yield_new[[col]] <- NA
yield <- rbind(yield[all_cols],yield_new[all_cols])
}
yield
yield_data <- yield_scraper()
yield <- read.csv("yield_data.csv") %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
arrange(Date)
yield
max_yr <- lubridate::year(max(yield$Date))
years <- (max_yr + 1):lubridate::year(Sys.time())
for (year in years) {
link <- url(paste0("https://home.treasury.gov/resource-center/data-chart-center/interest-rates/daily-treasury-rates.csv/",
year,
"/all?type=daily_treasury_yield_curve&field_tdr_date_value=",
year,
"&page&_format=csv"))
yield_new <- read.csv(link) %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
arrange(Date)
all_cols <- union(names(yield), names(yield_new))
all_cols <- c("Date",
all_cols[grepl("Mo",all_cols)][order(as.numeric(gsub(" Mo", "", all_cols[grepl("Mo",all_cols)])))],
all_cols[grepl("Yr",all_cols)][order(as.numeric(gsub(" Yr", "", all_cols[grepl("Yr",all_cols)])))])
for (col in setdiff(all_cols, names(yield))) yield[[col]] <- NA
for (col in setdiff(all_cols, names(yield_new))) yield_new[[col]] <- NA
yield <- rbind(yield[all_cols],yield_new[all_cols])
}
yield <- read.csv("yield_data.csv") %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
arrange(Date)
yield
max_yr <- lubridate::year(max(yield$Date))
years <- (max_yr + 1):lubridate::year(Sys.time())
year=2025
link <- url(paste0("https://home.treasury.gov/resource-center/data-chart-center/interest-rates/daily-treasury-rates.csv/",
year,
"/all?type=daily_treasury_yield_curve&field_tdr_date_value=",
year,
"&page&_format=csv"))
yield_new <- read.csv(link) %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
arrange(Date)
yield_new
all_cols <- union(names(yield), names(yield_new))
all_cols <- c("Date",
all_cols[grepl("Mo",all_cols)][order(as.numeric(gsub(" Mo", "", all_cols[grepl("Mo",all_cols)])))],
all_cols[grepl("Yr",all_cols)][order(as.numeric(gsub(" Yr", "", all_cols[grepl("Yr",all_cols)])))])
all_cols
grepl("Mo",all_cols)
all_cols[grepl("Mo",all_cols)]
all_cols <- gsub("Month", "Mo", union(names(yield), names(yield_new)))
all_cols
all_cols <- c("Date",
all_cols[grepl("Mo",all_cols)][order(as.numeric(gsub(" Mo", "", all_cols[grepl("Mo",all_cols)])))],
all_cols[grepl("Yr",all_cols)][order(as.numeric(gsub(" Yr", "", all_cols[grepl("Yr",all_cols)])))])
yield_data <- yield_scraper()
yield <- read.csv("yield_data.csv") %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
arrange(Date)
max_yr <- lubridate::year(max(yield$Date))
years <- (max_yr + 1):lubridate::year(Sys.time())
link <- url(paste0("https://home.treasury.gov/resource-center/data-chart-center/interest-rates/daily-treasury-rates.csv/",
year,
"/all?type=daily_treasury_yield_curve&field_tdr_date_value=",
year,
"&page&_format=csv"))
link
yield_new <- read.csv(link) %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
arrange(Date)
all_cols <- gsub("Month", "Mo", union(names(yield), names(yield_new)))
all_cols <- gsub("Year", "Yr", union(names(yield), names(yield_new)))
all_cols <- c("Date",
all_cols[grepl("Mo",all_cols)][order(as.numeric(gsub(" Mo", "", all_cols[grepl("Mo",all_cols)])))],
all_cols[grepl("Yr",all_cols)][order(as.numeric(gsub(" Yr", "", all_cols[grepl("Yr",all_cols)])))])
all_cols
all_cols <- gsub("Month", "Mo", union(names(yield), names(yield_new)))
all_cols <- gsub("Month", "Mo", union(names(yield), names(yield_new)))
all_cols <- gsub("Year", "Yr", all_cols)
all_cols
all_cols <- c("Date",
all_cols[grepl("Mo",all_cols)][order(as.numeric(gsub(" Mo", "", all_cols[grepl("Mo",all_cols)])))],
all_cols[grepl("Yr",all_cols)][order(as.numeric(gsub(" Yr", "", all_cols[grepl("Yr",all_cols)])))])
all_cols
yield_data <- yield_scraper()
source("yield_scraper.R")
source("yield_plot.R")
yield_data <- yield_scraper()
yield_data
tail(yield_data)
yield <- read.csv("yield_data.csv") %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
arrange(Date)
max_yr <- lubridate::year(max(yield$Date))
years <- (max_yr + 1):lubridate::year(Sys.time())
link <- url(paste0("https://home.treasury.gov/resource-center/data-chart-center/interest-rates/daily-treasury-rates.csv/",
year,
"/all?type=daily_treasury_yield_curve&field_tdr_date_value=",
year,
"&page&_format=csv"))
yield_new <- read.csv(link) %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
arrange(Date)
yield_new
all_cols <- gsub("Month", "Mo", union(names(yield), names(yield_new)))
all_cols <- gsub("Year", "Yr", all_cols)
all_cols <- c("Date",
all_cols[grepl("Mo",all_cols)][order(as.numeric(gsub(" Mo", "", all_cols[grepl("Mo",all_cols)])))],
all_cols[grepl("Yr",all_cols)][order(as.numeric(gsub(" Yr", "", all_cols[grepl("Yr",all_cols)])))])
for (col in setdiff(all_cols, names(yield))) yield[[col]] <- NA
for (col in setdiff(all_cols, names(yield_new))) yield_new[[col]] <- NA
yield[all_cols]
yield_new[all_cols]
yield <- rbind(yield[all_cols],yield_new[all_cols])
yield
yield_new
tail(yield)
yield <- read.csv("yield_data.csv") %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
arrange(Date)
max_yr <- lubridate::year(max(yield$Date))
years <- (max_yr + 1):lubridate::year(Sys.time())
link <- url(paste0("https://home.treasury.gov/resource-center/data-chart-center/interest-rates/daily-treasury-rates.csv/",
year,
"/all?type=daily_treasury_yield_curve&field_tdr_date_value=",
year,
"&page&_format=csv"))
yield_new <- read.csv(link) %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
arrange(Date)
all_cols <- gsub("Month", "Mo", union(names(yield), names(yield_new)))
all_cols <- gsub("Year", "Yr", all_cols)
all_cols <- c("Date",
all_cols[grepl("Mo",all_cols)][order(as.numeric(gsub(" Mo", "", all_cols[grepl("Mo",all_cols)])))],
all_cols[grepl("Yr",all_cols)][order(as.numeric(gsub(" Yr", "", all_cols[grepl("Yr",all_cols)])))])
for (col in setdiff(all_cols, names(yield))) yield[[col]] <- NA
for (col in setdiff(all_cols, names(yield_new))) yield_new[[col]] <- NA
yield_new
tail(yield_new)
yield_new[all_cols]
yield[all_cols]
rbind(yield[all_cols],yield_new[all_cols])
yield <- rbind(yield[all_cols],yield_new[all_cols])
yield
tail(yield)
yield <- read.csv("yield_data.csv") %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
arrange(Date)
yield$Date
as.Date(yield$Date)
yield <- read.csv("yield_data.csv") %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
mutate(Date = as.Date(Date)) %>%
arrange(Date)
max_yr <- lubridate::year(max(yield$Date))
years <- (max_yr + 1):lubridate::year(Sys.time())
link <- url(paste0("https://home.treasury.gov/resource-center/data-chart-center/interest-rates/daily-treasury-rates.csv/",
year,
"/all?type=daily_treasury_yield_curve&field_tdr_date_value=",
year,
"&page&_format=csv"))
yield_new <- read.csv(link) %>%
rename_all(~gsub("X", "", .)) %>%
rename_all(~gsub("\\.([A-Z])", " \\1", .)) %>%
mutate(Date = as.Date(Date, format = "%m/%d/%Y")) %>%
arrange(Date)
all_cols <- gsub("Month", "Mo", union(names(yield), names(yield_new)))
all_cols <- gsub("Year", "Yr", all_cols)
all_cols <- c("Date",
all_cols[grepl("Mo",all_cols)][order(as.numeric(gsub(" Mo", "", all_cols[grepl("Mo",all_cols)])))],
all_cols[grepl("Yr",all_cols)][order(as.numeric(gsub(" Yr", "", all_cols[grepl("Yr",all_cols)])))])
for (col in setdiff(all_cols, names(yield))) yield[[col]] <- NA
for (col in setdiff(all_cols, names(yield_new))) yield_new[[col]] <- NA
yield <- rbind(yield[all_cols],yield_new[all_cols])
tail(yield)
source("yield_scraper.R")
source("yield_plot.R")
yield_data <- yield_scraper()
# Define UI ----
ui <- fluidPage(
titlePanel("US Treasury Yields"),
sidebarLayout(
sidebarPanel(
width = 3,
helpText("Create 3D Visualization of the Daily Treasury Yield Curve Rates changing over time."),
dateRangeInput("dates", label = "Date Range:",
start = min(yield_data$Date), end = max(yield_data$Date),
min = min(yield_data$Date), max = max(yield_data$Date)),
sliderInput("slider", label = "Width:",
min = 1, max = 10, value = 3)
),
mainPanel(
plotlyOutput("yield_curve")
)
)
)
# Define server logic ----
server <- function(input, output) {
output$yield_curve <- renderPlotly({
yield_plot(input$dates[1], input$dates[2], input$slider, yield_data)
})
}
# Run the app ----
shinyApp(ui = ui, server = server)
